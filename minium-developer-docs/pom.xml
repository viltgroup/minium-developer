<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.vilt.minium.developer</groupId>
		<artifactId>minium-developer-parent</artifactId>
		<version>2.6.0-RC1</version>
		<relativePath>../minium-developer-parent</relativePath>
	</parent>

	<artifactId>minium-developer-docs</artifactId>
	<name>Minium Developer - Documentation</name>

	<properties>
		<!-- output directory with the a static version of the site -->
		<static.docs.dir>${project.build.directory}/site/static</static.docs.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.vilt.minium.developer</groupId>
			<artifactId>minium-developer-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vilt.minium.developer</groupId>
			<artifactId>minium-automator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vilt.minium</groupId>
			<artifactId>minium-docs</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>generate-docs</id>
			<activation>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/mkdocs</directory>
						<includes>
							<include>**/*</include>
						</includes>
						<targetPath>${project.build.directory}/mkdocs</targetPath>
					</resource>
				</resources>
				<plugins>

					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>install node and yarn</id>
								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
								<configuration>
									<!-- Having node 7.1+ accelerates "Linking dependencies" phase in 
										yarn install significantly: https://github.com/yarnpkg/yarn/issues/1496#issuecomment-290201745 -->
									<nodeVersion>v${nodeVersion}</nodeVersion>
									<yarnVersion>v${yarnVersion}</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>bower install</id>
								<goals>
									<goal>bower</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>grunt build</id>
								<goals>
									<goal>grunt</goal>
								</goals>
								<configuration>
									<skipTests>true</skipTests>
									<arguments>license --no-color</arguments>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${project.basedir}/../minium-developer-web</workingDirectory>
							<yeomanProjectDirectory>${project.basedir}/../minium-developer-web</yeomanProjectDirectory>
						</configuration>
					</plugin>
					<!-- we need ant to define maven.classpath so that we can use it in 
						javadocs plugin (for some reason docletArtifacts doesn't seem to work -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>define-javadoc-classpath</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target>
										<property name="maven.classpath" refid="maven.runtime.classpath" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--<plugin> <groupId>de.taimos</groupId> <artifactId>redmine-maven-plugin</artifactId> 
						<executions> <execution> <id>generate-changelog</id> <phase>process-resources</phase> 
						<goals> <goal>changelog</goal> </goals> </execution> </executions> <configuration> 
						<redmineKey>${athena.redmine.key}</redmineKey> <changelogFile>${project.build.directory}/changelog</changelogFile> 
						<projectIdentifier>minium-developer</projectIdentifier> <changelogVersion>1.0.0</changelogVersion> 
						</configuration> </plugin> -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-thirdparty-licenses</id>
								<phase>process-resources</phase>
								<goals>
									<goal>add-third-party</goal>
								</goals>
								<configuration>
									<licenseMerges>
										<licenseMerge>
											The Apache Software License, Version 2.0|Apache
											License, Version
											2.0|Apache Public License 2.0|
											Apache License
											Version 2.0|Apache 2|Apache License 2.0|Apache
											Software
											Licenses|Apache License, version 2.0
										</licenseMerge>
										<licenseMerge>Eclipse Public License - v 1.0|Eclipse Public
											License 1.0</licenseMerge>
										<licenseMerge>The MIT License|MIT License</licenseMerge>
									</licenseMerges>
									<sortArtifactByName>true</sortArtifactByName>
									<outputDirectory>${project.build.directory}/licenses</outputDirectory>
									<useMissingFile>true</useMissingFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-api-markdown</id>
								<phase>package</phase>
								<goals>
									<goal>javadoc</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<sourcepath>
								../minium-elements/src/main/java;
								../minium-webelements/src/main/java;
								../minium-actions/src/main/java
							</sourcepath>
							<doclet>minium.docs.DocumentationDoclet</doclet>
							<docletPath>${project.build.directory}/classes</docletPath>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<outputDirectory>${project.build.directory}/mkdocs/docs/developer</outputDirectory>
							<additionalparam>-d
								${project.build.directory}/mkdocs/docs/developer</additionalparam>
							<!-- docletArtifacts doesn't seem to work, use it with antrun:run, 
								execution ID define-javadoc-classpathy -->
							<docletPath>${maven.classpath}</docletPath>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-thirdparty-licenses-md</id>
								<phase>package</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>minium.docs.ArtifactLicenseGenerator</mainClass>
									<killAfter>-1</killAfter>
									<systemProperties>
										<systemProperty>
											<key>org.freemarker.loggerLibrary</key>
											<value>none</value>
										</systemProperty>
									</systemProperties>
									<arguments>
										<argument>--templateFile</argument>
										<argument>${basedir}/src/main/resources/templates/third-parties.md.ftl</argument>
										<argument>--outputFile</argument>
										<argument>${project.build.directory}/mkdocs/docs/developer/third-parties.md</argument>
										<argument>--artifactLicensesFile</argument>
										<argument>${project.build.directory}/licenses/THIRD-PARTY.txt</argument>
										<argument>--bowerLicensesFile</argument>
										<argument>${basedir}/../minium-developer/target/LICENSES</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>create-distribution</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>assembly/zip.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
